68K GAS   			page 1


   1               		.text
   0               	
   0               	
   2               	
   3               		.global frexp 
   4               	
   5               	/*
   6               		double      frexp   (double __x, int *__exponent);
   7               	
   8               		Get significand and exponent
   9               		Breaks the floating point number x into its binary significand (a floating point value between 0.5
  10               	
  11               		x = significand * 2 exponent
  12               		The exponent is stored in the location pointed by exp, and the significand is the value returned b
  13               	
  14               		If x is zero, both parts (significand and exponent) are zero.
  15               	
  16               	*/
  17               	
  18               	frexp:
  19 0000 41EF 0004 		lea.l	(4,%A7),%A0	/* get pointer to parameters */
  20               	
  21 0004 F210 5480 		FMOVE.D		(%a0),%fp1  // __x -> fp1
  22 0008 F200 041F 		FGETMAN.x	%FP1,%FP0   // get significant/mantissa -> fp0
  23 000c F200 051E 		FGETEXP.X	%FP1,%FP2   // get exponent	-> fp2
  24 0010 2068 0008 		move.l		(8,%a0),%a0 // store exponent...
  25 0014 F210 6100 		FMOVE.L		%FP2,(%a0)  // ...
  26 0018 F23C 4820 		FDIV.x		#0x400000008000000000000000,%FP0  // i.e fdiv.x #2,fp0 !!
  26      4000 0000 
  26      8000 0000 
  26      0000 0000 
  27 0028 5290      		add.l 		#1,(%a0) 
  28               	
  29 002a 4E75      		rts
68K GAS   			page 2


DEFINED SYMBOLS
             frexp.S:18     .text:00000000 frexp

NO UNDEFINED SYMBOLS
