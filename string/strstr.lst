68K GAS   			page 1


   1               		.text
   0               	
   0               	
   2               		.global strstr
   3               	
   4               	
   5               	/*
   6               		char * strstr(const char *s1, const char *s2);
   7               			checks, if s2 ist contained in s1 and returns pointer to first character or NULL
   8               	*/
   9               	strstr:
  10 0000 226F 0008 		move.l	(8,%a7),%a1		/* *s2 */
  11 0004 206F 0004 		move.l	(4,%a7),%a0 	/* *s1 */
  12 0008 4281      		clr.l	%d1
  13 000a 2F09      		move.l	%a1,-(%A7)		/* *s2 -> stack */
  14               		
  15               	lp1:						/* length of s2 -> %d1 */
  16 000c 5241      		addq	#1,%d1
  17 000e 4A19      		tst.b   (%a1)+
  18 0010 66FA      		bne.b	lp1
  19 0012 5341      		subq	#1,%d1
  20 0014 672C      		beq.b	badexit			/* if length == 0 -> s2 not found */
  21 0016 225F      		move.l	(%a7)+,%a1		/* restore *s2 -> %a1 */
  22               	lp:							/* search s1 for s2 */
  23 0018 1018      		move.b	(%a0)+,%d0		/* take next character from s1 */
  24 001a 6726      		beq.b	badexit		    /* s1 ends -> s2 not found */
  25 001c B011      		cmp.b	(%a1),%d0       /* compare it with current character from s2 */
  26 001e 66F8      		bne.b	lp				/* not equal ? -> loop */
  27 0020 5348      		subq	#1,%a0			/* if equal stay on that character and test the next character  */
  28 0022 48A7 40C0 		movem	%D1/%A0/%A1,-(%A7) /* save search state */
  29               	lp2:
  30 0026 1018      		move.b	(%a0)+,%d0		/* compare next character */
  31 0028 B019      		cmp.b 	(%a1)+,%d0
  32 002a 660C      		bne.b	badcmp			/* if not equal return to first character of s2 */
  33 002c 5341      		subq	#1,%d1			/* if equal, compare next character */
  34 002e 6600 FFF6 		bne	lp2					/* if one is left over */
  35 0032 4C9F 0302 		movem	(%a7)+,%D1/%A0/%A1 /* at this point we found s2 in s1, so restore address of starting charac
  36               								/* and return it to the caller */
  37 0036 4E75      		rts
  38               	badcmp:
  39 0038 4C9F 0302 		movem	(%a7)+,%D1/%A0/%A1 /* restore state */
  40 003c 5248      		addq	#1,%a0
  41 003e 6000 FFD8 		bra	lp					/* and continue searching at lp */
  42               	badexit:			
  43 0042 207C 0000 		movea.l #0,%a0		/* return NULL, s2 not found */
  43      0000 
  44 0048 4E75      		rts
68K GAS   			page 2


DEFINED SYMBOLS
            strstr.S:9      .text:00000000 strstr
            strstr.S:15     .text:0000000c lp1
            strstr.S:42     .text:00000042 badexit
            strstr.S:22     .text:00000018 lp
            strstr.S:29     .text:00000026 lp2
            strstr.S:38     .text:00000038 badcmp

NO UNDEFINED SYMBOLS
