#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include "../fs.h"
#include "fs_fat.h"



const struct file_operations fat_file_operations =
{
  fatfs_open,
  fatfs_close,
  fatfs_read,
  fatfs_write,
  fatfs_seek,
  fatfs_ioctrl, 
  fatfs_remove,
  fatfs_getpos,

 /* Directory operations */

  fatfs_opendir,
  fatfs_closedir,
  fatfs_readdir,
   
 /* Path operations */
  fatfs_mkdir,
  fatfs_rmdir,
  fatfs_rename 
};


/*******************************************************************************
 *   private functions   
 *******************************************************************************/


/*******************************************************************************
 *   public functions   
 *******************************************************************************/
 
 
static int     fatfs_open(struct _file *filp){
}

static int     fatfs_close(struct _file *filp){
}

static int     fatfs_read(struct _file *filp, char *buffer, int buflen){
}

static int     fatfs_write(struct _file *filp, const char *buffer, int buflen){
}

static int     fatfs_seek(struct _file *filp, int offset, int whence){
}

static int     fatfs_remove(struct _file *filp){
}

static int     fatfs_getpos(struct _file *filp){
}

static int     fatfs_rename(struct _file *filp, const char *oldrelpath, const char *newrelpath){
}

static int     fatfs_ioctl(struct _file *filp, int cmd, unsigned long arg){
}

static int     fatfs_mkdir(struct _file *filp, const char *relpath){
}

static int     fatfs_rmdir(struct _file *filp, const char *relpath){
}

static int     fatfs_opendir(struct _file *filp, const char *relpath, void *dir){
}

static int     fatfs_closedir(struct _file *filp, void *dir){
}

static int     fatfs_readdir(struct _file *filp, void *dir){
}


void    fatfs_init_fs(void){

        /* GIDE initialisieren und laufwerk mounten....*/
        
        /* register driver within lib */
        register_driver("hda0","FAT",&fat_file_operations); 	
	
}

